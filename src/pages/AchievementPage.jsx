import React, { useState, useEffect } from 'react';
import Header from '../component/Header'; // Import component Header
import BottomNav from '../component/BottomNav'; 
import styles from '../styles/AchievementPage.module.css';
import { useNavigate } from 'react-router-dom';

function AchievementPage() {
  const [loggedInUser, setLoggedInUser] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const storedUser = localStorage.getItem('loggedInUser');

    if (storedUser) {
      try {
        const user = JSON.parse(storedUser);
        // L∆∞u to√†n b·ªô object user v√†o state
        setLoggedInUser(user);
        console.log('ƒê√£ t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng:', user);

      } catch (error) {
        console.error('L·ªói khi ƒë·ªçc th√¥ng tin ng∆∞·ªùi d√πng:', error);
        localStorage.removeItem('loggedInUser');
        navigate('/login');
      }
    } else {
      console.log('Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng. Chuy·ªÉn h∆∞·ªõng.');
      navigate('/login');
    }
  }, [navigate]);


  // T√™n ng∆∞·ªùi d√πng ƒë·ªÉ truy·ªÅn v√†o Header
  // S·ª≠ d·ª•ng optional chaining (?.) ƒë·ªÉ an to√†n truy c·∫≠p thu·ªôc t√≠nh
  const userNameForHeader = loggedInUser?.fullName || 'ƒêang t·∫£i...';


  // N·∫øu ch∆∞a c√≥ th√¥ng tin user (ƒëang t·∫£i ho·∫∑c ch∆∞a login), hi·ªÉn th·ªã loading ho·∫∑c null
   if (!loggedInUser && localStorage.getItem('loggedInUser')) {
        // C√≥ d·ªØ li·ªáu trong LS nh∆∞ng ƒëang parse ho·∫∑c l·ªói parse
       return <div>ƒêang t·∫£i th√¥ng tin ng∆∞·ªùi d√πng...</div>;
   }

   if (!loggedInUser && !localStorage.getItem('loggedInUser')) {
       // Kh√¥ng c√≥ d·ªØ li·ªáu trong LS, useEffect s·∫Ω chuy·ªÉn h∆∞·ªõng
       return null; // Kh√¥ng render g√¨
   }
  const userName = "Ng∆∞·ªùi d√πng"; // Thay th·∫ø b·∫±ng t√™n ng∆∞·ªùi d√πng th·ª±c t·∫ø

  return (
    <div className={styles.achievementContainer}>
      <Header userName={userNameForHeader} />

      <div className={styles.content}>
        <h2 className={styles.level}>C·∫•p ƒë·ªô 20</h2>
        <div className={styles.trophyContainer}>
          {/* Thay th·∫ø b·∫±ng h√¨nh ·∫£nh ho·∫∑c SVG c·ªßa chi·∫øc c√∫p */}
          <div className={styles.trophy}>üèÜ</div>
          <div className={styles.progressBar}>
            <div className={styles.progress}></div>
          </div>
          <p className={styles.progressText}>290/300 XP</p>
        </div>

        <div className={styles.taskTabs}>
          <button className={`${styles.tabButton} ${styles.active}`}>Nhi·ªám v·ª• ng√†y</button>
          <button className={styles.tabButton}>Nhi·ªám v·ª• tu·∫ßn</button>
        </div>

        <div className={styles.dailyTask}>
          <p className={styles.taskDescription}>Qu√©t 10 chai nh·ª±a <span className={styles.taskProgress}>8/10</span> <span className={styles.reward}>+ 30 ƒë</span></p>
          {/* C√°c nhi·ªám v·ª• h√†ng ng√†y kh√°c c√≥ th·ªÉ ƒë∆∞·ª£c th√™m v√†o ƒë√¢y */}
        </div>

        <div className={styles.calendar}>
          <div className={styles.calendarHeader}>
            <button className={styles.calendarNav}>&lt;</button>
            <span className={styles.calendarMonth}>dd/mm/yy</span> {/* Hi·ªÉn th·ªã th√°ng/nƒÉm */}
            <button className={styles.calendarNav}>&gt;</button>
          </div>
          <div className={styles.weekdays}>
            <span>Mon</span>
            <span>Tue</span>
            <span>Wed</span>
            <span>Thu</span>
            <span>Fri</span>
            <span>Sat</span>
            <span>Sun</span>
          </div>
          <div className={styles.daysGrid}>
            {/* D·ªØ li·ªáu ng√†y v√† tr·∫°ng th√°i nhi·ªám v·ª• s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã ·ªü ƒë√¢y */}
            {Array.from({ length: 35 }).map((_, index) => (
              <div key={index} className={styles.day}>
                <span className={styles.dayNumber}>{index + 1}</span>
                <div className={styles.taskIndicator}></div> {/* Ch·ªâ b√°o tr·∫°ng th√°i nhi·ªám v·ª• */}
              </div>
            ))}
          </div>
        </div>
      </div>

      <BottomNav />
    </div>
  );
}

export default AchievementPage;